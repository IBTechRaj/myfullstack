c
n
c
self.slots_list
n
available_slots_count
n
c
params[:time_slots][1][:start_time].to_time.strftime("%I:%M")
params[:time_slots][1][:start_time].to_time
params[:time_slots][1][:start_time]
params[:time_slots][0][:start_time]
sl["from"].to_time.strftime("%I:%M")
n
sl["from"].to_time.strftime("%I:%M")
n
sl["from"].to_time.strftime("%I:%M")
n
sl["from"].to_time.strftime("%I:%M")
n
sl["from"].to_time.strftime("%I:%M")
n
sl["from"].to_time.strftime("%I:%M")
 params[:time_slots][1][:start_time]
already_slot
n
already_slot
slots
c
(params[:time_slots][0][:end_time].to_time - 1.minute).strftime("%I:%M %p")
params[:time_slots][0][:end_time].to_time - 1.minute.strftime("%I:%M %p")
params[:time_slots][0][:end_time].to_time - 1.minute
params[:time_slots][0][:end_time] - 1.minute
params[:time_slots][0][:end_time]
n
slot["sno"] == params[:time_slots][0][:sno].to_s
slot["sno"]
n
c
slot["sno"]
slot[:sno]
slots
c
slots.last["sno"].to_i
slots.last["sno"]
slots.last[:sno]
slots.last
slots.last[:sno].to_i
slots.empty?
slots
start_sno
n
start_sno
params[:time_slots][1].present?
n
c
sl["to"].to_time.strftime("%I:%M")+ 1.minute
sl["to"].to_time.strftime("%I:%M")
sl["to"].to_time
c
Date.parse(self.availability_date).today?
c
n
service_provider_id
slot
Date.parse(self.availability_date).strftime(DMY_FORMAT)
availability_date
c
params[:time_slots][0][:start_time]
sl["from"].to_time.strftime("%I:%M")
n
c
sl["to"].to_time.strftime("%I:%M")
sl["to"].to_time.strftime("%I:%M %p")
sl["to"].to_time.strptime("%I:%M")
sl["to"].to_time.strptime("%I:%M %p")
params[:time_slots][0][:end_time]
sl["to"].to_time.strftime("%I:%M %p")
sl["to"].to_time
.strftime("%I:%M %p")n
sl["to"].to_time
params[:time_slots][0][:end_time]
params[:time_slots][0][:end_time])
sl["to"].to_time
params[:time_slots][0][:start_time]
sl["from"].to_time
slots
c
n
sl[:from].to_time.strftime("%I:%M %p")
slots
c
availability.timeslots
availability
slots
c
n
slots
c
slots
c
n
sl[:from].to_time.strftime("%I:%M %p")
slots
already_slot
n
already_slot
n
already_slot
n
slots
c
n
slots
c
n
sl
n
params[:time_slots][0][:start_time]
sl["from"].to_time.strftime("%I:%M %p") == params[:time_slots][0][:start_time]
n
sl["from"].to_time.strftime("%I:%M %p") == params[:time_slots][0][:start_time]
params[:time_slots][0][:start_time]
n
sl["from"].to_time.strftime("%I:%M %p") == params[:time_slots][0][:start_time]
params[:time_slots][0][:start_time]
n
sl["from"].to_time.strftime("%I:%M %p") == params[:time_slots][0][:start_time]
params[:time_slots][0][:start_time]
n
sl["from"].to_time.strftime("%I:%M %p") == params[:time_slots][0][:start_time]
params[:time_slots][0][:start_time]
sl["from"].to_time.strftime("%I:%M %p")
c
sl[:from].to_time.strftime("%I:%M %p")
slots
c
sl["from"].to_time.strftime("%I:%M %p")
slots
sl[:from].to_time.strftime("%I:%M %p")
c
n
sl[:from].to_time.strftime("%I:%M %p") == params[:time_slots][0][:start_time]
sl[:from].to_time.strftime("%I:%M %p")
sl[:from].to_time
params[:time_slots][0][:end_time]
sl["to"].to_time
sl["from"].to_time
params[:time_slots][0][:start_time]
sl[:from].to_time
sl["from"].to_time
sl
slots
sl["from"].to_time
c
params[:time_slots][1][:start_time].to_time
params[:time_slots][1][:start_time]
sl["from"].to_time
sl["from"]
sl
slots
c
slots
already_slot
n
already_slot
n
sl["from"].to_time
c
sl["from"]
sl[:from]
sl
slots
c
slots
c
n
slots
c
params["time_slots"][1][:start_time]
params["time_slots"][1]
c
addl_slots
c
TimeSlotsCalculator.new.calculate_time_slots("8:00", "9:00",59,1)
add_new_slots[:start_time].to_time.strftime("%I:%M %p")
add_new_slots[:start_time].to_time.strftime("%I:%M %p"
add_new_slots[:start_time].to_time
add_new_slots[:start_time]
add_new_slots
c
params[:time_slots][0]
params[:time_slots]
add_new_slots
n
c
n
new_slot
params["time_slots"][1][:start_time].to_time.strftime("%I:%M %p")
params["time_slots"][1][:start_time].to_time
params["time_slots"][1][:start_time]
availability.start_time
c
t_slot
c
 params["time_slots"][1]
n
c
n
c
n
 params["time_slots"][1]
n
c
params["time_slots"][1]
params["time_slots"]
c
start_sno
n
c
slots.last[:sno].to_i + 1
slots.last[:sno]
slots.last["sno"]
slots.last
slots.empty?
slots.empty
slots.last["sno"].to_i + 1
n
already_slot
n
slots
n
slot[:sno]
n
slots
n
slots
n
slot[:from]
n
params[:time_slots][0][:start_time]
slot[:from]
slot[:sno]
n
slot[:sno]
n
slot[:sno]
n
slot[:sno]
c
already_slot
n
slot[:sno] == params[:time_slots][0][:sno].to_s
slot
n
slot
