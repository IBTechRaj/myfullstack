c
params["time_slots"]
params[:time_slots]
c
n
c
update_slots_list
update_slot_list
updated_time_slots
time_slots
c
response
n
c
                new_slots = TimeSlotsCalculator.new.calculate_time_slots( s_time, e_time,  59, start_sno)
new_slots
n
addl_slots
n
slots
n
params[:time_slots][i][:sno].to_s
n
slots
n
c
n
slots
n
c
slots.last[:sno]
slots.last["sno"]
slots.last
n
params[:time_slots][i]
n
slots
n
new_slots
n
slots
n
slots
n
c
n
already_booked_slots
n
slots
n
new_slots
n
slots
n
already_slot
n
start_sno
n
params[:time_slots][i]
n
slots
n
c
slots
slots.last
slots.last["sno"]
slots.last["sno"].to_i
slots
start_sno
n
params[:time_slots][i]
params[:time_slots][i].present?
n
slots
n
new_slots
n
e_time
n
already_slot
n
addl_slots
n
start_sno
n
slots
n
slot[:from]
n
params[:time_slots][i][:sno].to_s
slot["sno"]
n
slot["sno"]
slot
c
slot["sno"]
params[:time_slots][i][:sno].to_s
n
c
 params["time_slots"][i][:start_time]
n
slots
start_sno
n
params[:time_slots][i][:sno].present?
n
slots
n
new_slots
n
 params["time_slots"][i][:end_time]
n
start_sno
n
params[:time_slots][i][:sno].present?
n
i
slots
already_slot
params[:time_slots][i][:sno].present?
n
params[:time_slots][i][:sno].present?
 params[:time_slots].count
i
n
c
params["time_slots"][1]
params[:time_slots][1][:sno].present?
params[:time_slots][0][:sno].present?
params[:time_slots][0][:sno].to_s
params[:time_slots][0].[:sno].present?
params[:time_slots][0].:sno.present?
params[:time_slots].count
params.time_slots.count
params[0]
params.present?
params.exist?
params
params.count
c
n
c
self.slots_list
n
available_slots_count
n
c
params[:time_slots][1][:start_time].to_time.strftime("%I:%M")
params[:time_slots][1][:start_time].to_time
params[:time_slots][1][:start_time]
params[:time_slots][0][:start_time]
sl["from"].to_time.strftime("%I:%M")
n
sl["from"].to_time.strftime("%I:%M")
n
sl["from"].to_time.strftime("%I:%M")
n
sl["from"].to_time.strftime("%I:%M")
n
sl["from"].to_time.strftime("%I:%M")
n
sl["from"].to_time.strftime("%I:%M")
 params[:time_slots][1][:start_time]
already_slot
n
already_slot
slots
c
(params[:time_slots][0][:end_time].to_time - 1.minute).strftime("%I:%M %p")
params[:time_slots][0][:end_time].to_time - 1.minute.strftime("%I:%M %p")
params[:time_slots][0][:end_time].to_time - 1.minute
params[:time_slots][0][:end_time] - 1.minute
params[:time_slots][0][:end_time]
n
slot["sno"] == params[:time_slots][0][:sno].to_s
slot["sno"]
n
c
slot["sno"]
slot[:sno]
slots
c
slots.last["sno"].to_i
slots.last["sno"]
slots.last[:sno]
slots.last
slots.last[:sno].to_i
slots.empty?
slots
start_sno
n
start_sno
params[:time_slots][1].present?
n
c
sl["to"].to_time.strftime("%I:%M")+ 1.minute
sl["to"].to_time.strftime("%I:%M")
sl["to"].to_time
c
Date.parse(self.availability_date).today?
c
n
service_provider_id
slot
Date.parse(self.availability_date).strftime(DMY_FORMAT)
availability_date
c
params[:time_slots][0][:start_time]
sl["from"].to_time.strftime("%I:%M")
n
c
sl["to"].to_time.strftime("%I:%M")
sl["to"].to_time.strftime("%I:%M %p")
sl["to"].to_time.strptime("%I:%M")
sl["to"].to_time.strptime("%I:%M %p")
params[:time_slots][0][:end_time]
sl["to"].to_time.strftime("%I:%M %p")
sl["to"].to_time
.strftime("%I:%M %p")n
sl["to"].to_time
params[:time_slots][0][:end_time]
params[:time_slots][0][:end_time])
sl["to"].to_time
params[:time_slots][0][:start_time]
sl["from"].to_time
slots
c
n
sl[:from].to_time.strftime("%I:%M %p")
slots
c
availability.timeslots
availability
slots
c
n
slots
c
slots
c
n
sl[:from].to_time.strftime("%I:%M %p")
slots
already_slot
n
already_slot
n
already_slot
n
slots
c
n
slots
c
n
sl
